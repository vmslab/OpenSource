//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a mozart.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using Mozart.Common;
using Mozart.Collections;
using Mozart.Extensions;
using Mozart.Mapping;
using Mozart.Data;
using Mozart.Data.Entity;
using Mozart.Task.Execution;

namespace Sample.APS.Outputs
{
    
    [Table(Name="PegHistory")]
    public partial class PegHistory : EntityObject
    {
        [Column()]
        public string a { get; set; }

        public PegHistory ShallowCopy()
        {
			var x = (PegHistory) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="InputPlan")]
    public partial class InputPlan : EntityObject
    {
        [Column()]
        public string a { get; set; }

        public InputPlan ShallowCopy()
        {
			var x = (InputPlan) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="StepTarget")]
    public partial class StepTarget : EntityObject
    {
        [Column()]
        public string a { get; set; }

        public StepTarget ShallowCopy()
        {
			var x = (StepTarget) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="UnpegHistory")]
    public partial class UnpegHistory : EntityObject
    {
        [Column()]
        public string a { get; set; }

        public UnpegHistory ShallowCopy()
        {
			var x = (UnpegHistory) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    /// <summary>
    /// 
    /// Keys: LINE_ID, EQP_ID, LOT_ID, STEP_ID
    /// </summary>
    [Table(Name="EqpPlan")]
    public partial class EqpPlan : EntityObject
    {
        [Column(IsPrimaryKey=true)]
        public string LINE_ID { get; set; }

        [Column(IsPrimaryKey=true, PrimaryKeyOrder=1)]
        public string EQP_ID { get; set; }

        [Column(IsPrimaryKey=true, PrimaryKeyOrder=2)]
        public string LOT_ID { get; set; }

        [Column()]
        public string PRODUCT_ID { get; set; }

        [Column()]
        public string PROCESS_ID { get; set; }

        [Column(IsPrimaryKey=true, PrimaryKeyOrder=3)]
        public string STEP_ID { get; set; }

        [Column()]
        public int LOT_QTY { get; set; }

        [Column()]
        public System.DateTime START_TIME { get; set; }

        /// <summary>
        ///  
        /// </summary>
        [Column()]
        public System.DateTime END_TIME { get; set; }

        [Column()]
        public double PROC_TIME { get; set; }

        public EqpPlan ShallowCopy()
        {
			var x = (EqpPlan) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    /// <summary>
    /// 
    /// Keys: LINE_ID, EQP_ID, TARGET_DATE
    /// </summary>
    [Table(Name="LoadStat")]
    public partial class LoadStat : EntityObject
    {
        [Column(IsPrimaryKey=true)]
        public string LINE_ID { get; set; }

        [Column()]
        public string EQP_GROUP { get; set; }

        [Column(IsPrimaryKey=true, PrimaryKeyOrder=1)]
        public string EQP_ID { get; set; }

        [Column(IsPrimaryKey=true, PrimaryKeyOrder=2)]
        public string TARGET_DATE { get; set; }

        [Column()]
        public decimal SETUP { get; set; }

        [Column()]
        public decimal BUSY { get; set; }

        [Column()]
        public decimal IDLERUN { get; set; }

        [Column()]
        public decimal IDLE { get; set; }

        [Column()]
        public decimal PM { get; set; }

        [Column()]
        public decimal DOWN { get; set; }

        public LoadStat ShallowCopy()
        {
			var x = (LoadStat) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    /// <summary>
    /// 
    /// Keys: LINE_ID, EQP_ID, TARGET_DATE
    /// </summary>
    [Table(Name="LoadHistory")]
    public partial class LoadHistory : EntityObject
    {
        [Column(IsPrimaryKey=true)]
        public string LINE_ID { get; set; }

        [Column(IsPrimaryKey=true, PrimaryKeyOrder=1)]
        public string EQP_ID { get; set; }

        [Column(IsPrimaryKey=true, PrimaryKeyOrder=2)]
        public string TARGET_DATE { get; set; }

        [Column()]
        public string INFO_GZIP { get; set; }

        [Column()]
        public string INFO_GZIP2 { get; set; }

        [Column()]
        public string INFO_GZIP3 { get; set; }

        public LoadHistory ShallowCopy()
        {
			var x = (LoadHistory) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="ReleaseHistory")]
    public partial class ReleaseHistory : EntityObject
    {
        [Column()]
        public string „ÖÅ { get; set; }

        public ReleaseHistory ShallowCopy()
        {
			var x = (ReleaseHistory) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    /// <summary>
    /// 
    /// Keys: ERROR_TYPE, CATEGORY, ITEM
    /// </summary>
    [Table(Name="ErrorHistory")]
    public partial class ErrorHistory : EntityObject
    {
        /// <summary>
        /// INFORM, WARNING, ERROR
        /// </summary>
        [Column(IsPrimaryKey=true)]
        public string ERROR_TYPE { get; set; }

        /// <summary>
        /// WIP, BOP..
        /// </summary>
        [Column(IsPrimaryKey=true, PrimaryKeyOrder=1)]
        public string CATEGORY { get; set; }

        [Column(IsPrimaryKey=true, PrimaryKeyOrder=2)]
        public string ITEM { get; set; }

        [Column()]
        public string REASON { get; set; }

        public ErrorHistory ShallowCopy()
        {
			var x = (ErrorHistory) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="DispatchLog")]
    public partial class DispatchLog : EntityObject
    {
        [Column()]
        public string LINE_ID { get; set; }

        [Column()]
        public string EQP_ID { get; set; }

        [Column()]
        public string DISPATCHING_TIME { get; set; }

        [Column()]
        public string INIT_WIP_CNT { get; set; }

        [Column()]
        public string FILTERED_WIP_CNT { get; set; }

        [Column()]
        public string SELECTED_WIP_CNT { get; set; }

        [Column()]
        public string SELECTED_WIP { get; set; }

        [Column()]
        public string FILTERED_WIP_LOG { get; set; }

        [Column()]
        public string DISPATCH_WIP_LOG { get; set; }

        [Column()]
        public string PRESET_ID { get; set; }

        public DispatchLog ShallowCopy()
        {
			var x = (DispatchLog) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
}
