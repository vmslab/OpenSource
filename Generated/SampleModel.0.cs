//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a mozart.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using Mozart.Common;
using Mozart.Collections;
using Mozart.Extensions;
using Mozart.Mapping;
using Mozart.Data;
using Mozart.Data.Entity;
using Mozart.Task.Execution;
using System.ComponentModel;
using Mozart.Task.Execution.Persists;
using Sample.APS.Inputs;
using Mozart.DataActions;
using Sample.APS.Outputs;

namespace Sample.APS
{
    
    /// <summary>
    /// Mozart task execution parameters class
    /// </summary>
    public partial class GlobalParameters : Parameters
    {
        private string _ExcutionType = "Simulation";
        /// <summary>
        /// All = Pegging , Simulation 모듈 모두 수행
        /// </summary>
        public virtual string ExcutionType
        {
            get
            {
                return this._ExcutionType;
            }
            set
            {
                _ExcutionType = value;
            }
        }
        private string _model_name = "Sample";
        [System.ComponentModel.DisplayNameAttribute("model-name")]
        public virtual string model_name
        {
            get
            {
                return this._model_name;
            }
            set
            {
                _model_name = value;
            }
        }
        private int _period = 3;
        public virtual int period
        {
            get
            {
                return this._period;
            }
            set
            {
                _period = value;
            }
        }
        [System.ComponentModel.DisplayNameAttribute("start-time")]
        public System.DateTime start_time { get; set; }

        public static GlobalParameters Instance { get { return InputMart.Instance.GlobalParameters; }}
    }
    /// <summary>
    /// Mozart task execution parameters class
    /// </summary>
    public partial class ConfigParameters : Parameters
    {
    }
    /// <summary>
    /// Input data context class
    /// </summary>
    public partial class InputMart : InputRepository
    {
        public static InputMart Instance { get { return (InputMart)ServiceLocator.Resolve<InputRepository> (); }}
        public EntityTable<Product> Product
        {
            get
            {
                return this.GetTable<Product>();
            }
        }
        public EntityTable<Process> Process
        {
            get
            {
                return this.GetTable<Process>();
            }
        }
        public EntityTable<ProcStep> ProcStep
        {
            get
            {
                return this.GetTable<ProcStep>();
            }
        }
        private EntityView<ProcStep> _ProcStepView;
        /// <summary>
        /// Key: PROCESS_ID
        /// </summary>
        public EntityView<ProcStep> ProcStepView
        {
            get
            {
                if ((this._ProcStepView == null))
                {
                    this._ProcStepView = this.CreateView<ProcStep>(this.ProcStep, null, "PROCESS_ID", Mozart.Data.Entity.IndexType.Hashtable);
                }
                return this._ProcStepView;
            }
        }
        public EntityTable<Equipment> Equipment
        {
            get
            {
                return this.GetTable<Equipment>();
            }
        }
        public EntityTable<EqpArrange> EqpArrange
        {
            get
            {
                return this.GetTable<EqpArrange>();
            }
        }
        public EntityTable<Wip> Wip
        {
            get
            {
                return this.GetTable<Wip>();
            }
        }
        public EntityTable<StdStep> StdStep
        {
            get
            {
                return this.GetTable<StdStep>();
            }
        }
        public EntityTable<LineInfo> LineInfo
        {
            get
            {
                return this.GetTable<LineInfo>();
            }
        }
        public EntityTable<ProductRoute> ProductRoute
        {
            get
            {
                return this.GetTable<ProductRoute>();
            }
        }
        public EntityTable<StepTAT> StepTAT
        {
            get
            {
                return this.GetTable<StepTAT>();
            }
        }
        public EntityTable<StepYield> StepYield
        {
            get
            {
                return this.GetTable<StepYield>();
            }
        }
        public EntityTable<Demand> Demand
        {
            get
            {
                return this.GetTable<Demand>();
            }
        }
        public EntityTable<Config> Config
        {
            get
            {
                return this.GetTable<Config>();
            }
        }
        public EntityTable<ExcutionOpertion> ExcutionOpertion
        {
            get
            {
                return this.GetTable<ExcutionOpertion>();
            }
        }
        public EntityTable<PresetInfo> PresetInfo
        {
            get
            {
                return this.GetTable<PresetInfo>();
            }
        }
        protected override void ClearMyModel()
        {
            base.ClearMyModel();
            this.DisposeIfNeeds(this._ProcStepView);
            this._ProcStepView = null;
        }
        /// <summary>
        /// Global Pararamters
        /// </summary>
        public GlobalParameters GlobalParameters
        {
            get
            {
                return ((GlobalParameters)(this.GlobalParametersCore));
            }
        }
        public ConfigParameters GetConfigParameters(string key)
        {
            return this.GetParameters<ConfigParameters>(key);
        }
    }
    /// <summary>
    /// Input data context class
    /// </summary>
    public partial class TempMart : TempRepository
    {
        public static TempMart Instance { get { return (TempMart)ServiceLocator.Resolve<TempRepository> (); }}
    }
    /// <summary>
    /// Output data context class
    /// </summary>
    public partial class OutputMart : OutputRepository
    {
        public static OutputMart Instance { get { return (OutputMart)ServiceLocator.Resolve<OutputRepository> (); }}
        public IEntityWriter<PegHistory> PegHistory
        {
            get
            {
                return this.GetTable<PegHistory>();
            }
        }
        public IEntityWriter<InputPlan> InputPlan
        {
            get
            {
                return this.GetTable<InputPlan>();
            }
        }
        public IEntityWriter<StepTarget> StepTarget
        {
            get
            {
                return this.GetTable<StepTarget>();
            }
        }
        public IEntityWriter<UnpegHistory> UnpegHistory
        {
            get
            {
                return this.GetTable<UnpegHistory>();
            }
        }
        public IEntityWriter<EqpPlan> EqpPlan
        {
            get
            {
                return this.GetTable<EqpPlan>();
            }
        }
        public IEntityWriter<LoadStat> LoadStat
        {
            get
            {
                return this.GetTable<LoadStat>();
            }
        }
        public IEntityWriter<LoadHistory> LoadHistory
        {
            get
            {
                return this.GetTable<LoadHistory>();
            }
        }
        public IEntityWriter<ReleaseHistory> ReleaseHistory
        {
            get
            {
                return this.GetTable<ReleaseHistory>();
            }
        }
        public IEntityWriter<ErrorHistory> ErrorHistory
        {
            get
            {
                return this.GetTable<ErrorHistory>();
            }
        }
        public IEntityWriter<DispatchLog> DispatchLog
        {
            get
            {
                return this.GetTable<DispatchLog>();
            }
        }
    }
}
