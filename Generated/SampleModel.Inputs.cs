//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a mozart.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using Mozart.Common;
using Mozart.Collections;
using Mozart.Extensions;
using Mozart.Mapping;
using Mozart.Data;
using Mozart.Data.Entity;
using Mozart.Task.Execution;

namespace Sample.APS.Inputs
{
    
    [Table(Name="Product")]
    public partial class Product : EntityObject
    {
        [Column()]
        public string LINE_ID { get; set; }

        [Column()]
        public string PRODUCT_ID { get; set; }

        [Column()]
        public string PRODUCT_NAME { get; set; }

        [Column()]
        public string PRODUCT_TYPE { get; set; }

        [Column()]
        public string PROCESS_ID { get; set; }

        [Column()]
        public int LOT_SIZE { get; set; }

        [Column()]
        public int INPUT_BATCH_SIZE { get; set; }

        public Product ShallowCopy()
        {
			var x = (Product) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="Process")]
    public partial class Process : EntityObject
    {
        [Column()]
        public string LINE_ID { get; set; }

        [Column()]
        public string PROCESS_ID { get; set; }

        [Column()]
        public string PROCESS_NAME { get; set; }

        [Column()]
        public string DESCRIPTION { get; set; }

        public Process ShallowCopy()
        {
			var x = (Process) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="ProcStep")]
    public partial class ProcStep : EntityObject
    {
        [Column()]
        public string PROCESS_ID { get; set; }

        [Column()]
        public string STEP_ID { get; set; }

        /// <summary>
        /// 1,2,3
        /// </summary>
        [Column()]
        public int STEP_SEQ { get; set; }

        [Column()]
        public string STD_STEP_ID { get; set; }

        /// <summary>
        /// IN/OUT/NULL
        /// </summary>
        [Column()]
        public string STEP_TYPE { get; set; }

        /// <summary>
        /// DUMMY/BUCKET/PROCESSING
        /// </summary>
        [Column()]
        public string PROCESS_TYPE { get; set; }

        [Column()]
        public string IN_STOCK { get; set; }

        [Column()]
        public string OUT_STOCK { get; set; }

        public ProcStep ShallowCopy()
        {
			var x = (ProcStep) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="Equipment")]
    public partial class Equipment : EntityObject
    {
        /// <summary>
        /// SITE 위치 ?
        /// </summary>
        [Column()]
        public string SITE_ID { get; set; }

        [Column()]
        public string LINE_ID { get; set; }

        [Column()]
        public string EQP_ID { get; set; }

        [Column()]
        public string EQP_MODEL { get; set; }

        /// <summary>
        /// TURRET, MACHING CENTER
        /// </summary>
        [Column()]
        public string EQP_TYPE { get; set; }

        [Column()]
        public string EQP_GROUP { get; set; }

        /// <summary>
        /// DOWN, PM, BUSY, IDLE, SETUP
        /// </summary>
        [Column()]
        public string EQP_STATE { get; set; }

        /// <summary>
        /// DOWN, PM인 경우 상세코드에 따라  UP TIME  설정
        /// </summary>
        [Column()]
        public string EQP_STATE_CODE { get; set; }

        [Column()]
        public string STATE_CHANGE_TIME { get; set; }

        /// <summary>
        /// TABLE,INLINE,CHAMBER,LOTBATCH,LOTBATCH,BATCHINLINE
        /// </summary>
        [Column()]
        public string SIM_TYPE { get; set; }

        [Column()]
        public string PRESET_ID { get; set; }

        /// <summary>
        /// FIFO, EDD, SPT, LPT, WeightSum, WeightSorted
        /// </summary>
        [Column()]
        public string DISPATCHER_TYPE { get; set; }

        [Column()]
        public string MAX_LOT_BATCH_SIZE { get; set; }

        public Equipment ShallowCopy()
        {
			var x = (Equipment) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="EqpArrange")]
    public partial class EqpArrange : EntityObject
    {
        [Column()]
        public string LINE_ID { get; set; }

        [Column()]
        public string PRODUCT_ID { get; set; }

        [Column()]
        public string PROCESS_ID { get; set; }

        [Column()]
        public string STEP_ID { get; set; }

        [Column()]
        public string EQP_ID { get; set; }

        [Column()]
        public string TACT_TIME { get; set; }

        [Column()]
        public string PROC_TIME { get; set; }

        [Column()]
        public System.DateTime EFF_START_DATE { get; set; }

        [Column()]
        public System.DateTime EFF_END_DATE { get; set; }

        public EqpArrange ShallowCopy()
        {
			var x = (EqpArrange) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="Wip")]
    public partial class Wip : EntityObject
    {
        [Column()]
        public string LINE_ID { get; set; }

        [Column()]
        public string LOT_ID { get; set; }

        [Column()]
        public string PRODUCT_ID { get; set; }

        [Column()]
        public string PROCESS_ID { get; set; }

        [Column()]
        public string STEP_ID { get; set; }

        [Column()]
        public int UNIT_QTY { get; set; }

        [Column()]
        public string EQP_ID { get; set; }

        [Column()]
        public System.DateTime LINE_IN_TIME { get; set; }

        [Column()]
        public System.DateTime ARRIVE_TIME { get; set; }

        /// <summary>
        /// HOLD,WAIT,RUN
        /// </summary>
        [Column()]
        public string STATE { get; set; }

        [Column()]
        public System.DateTime STATE_TIME { get; set; }

        [Column()]
        public string BATCH_ID { get; set; }

        public Wip ShallowCopy()
        {
			var x = (Wip) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="StdStep")]
    public partial class StdStep : EntityObject
    {
        [Column()]
        public string STD_STEP_ID { get; set; }

        [Column()]
        public string STEP_TAT { get; set; }

        [Column()]
        public decimal STEP_YIELD { get; set; }

        [Column()]
        public decimal BUCKET_CPAPCITY { get; set; }

        public StdStep ShallowCopy()
        {
			var x = (StdStep) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="LineInfo")]
    public partial class LineInfo : EntityObject
    {
        [Column()]
        public string SITE_ID { get; set; }

        [Column()]
        public string LINE_ID { get; set; }

        [Column()]
        public string LINE_NAME { get; set; }

        /// <summary>
        /// INHOUSE,OUTSOURCING
        /// </summary>
        [Column()]
        public string LINE_TYPE { get; set; }

        public LineInfo ShallowCopy()
        {
			var x = (LineInfo) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="ProductRoute")]
    public partial class ProductRoute : EntityObject
    {
        [Column()]
        public string FR_PRODUCT_ID { get; set; }

        [Column()]
        public string OPER_ID { get; set; }

        [Column()]
        public string TO_PRODUCT_ID { get; set; }

        [Column()]
        public string IN_QTY { get; set; }

        [Column()]
        public string OUT_QTY { get; set; }

        /// <summary>
        /// BOM, CHANGE
        /// </summary>
        [Column()]
        public string ROUTE_TYP { get; set; }

        /// <summary>
        /// WAIT,IN,OUT
        /// </summary>
        [Column()]
        public string CHANGE_TYPE { get; set; }

        [Column()]
        public int PRIORITY { get; set; }

        public ProductRoute ShallowCopy()
        {
			var x = (ProductRoute) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="StepTAT")]
    public partial class StepTAT : EntityObject
    {
        [Column()]
        public string PRODUCT_ID { get; set; }

        [Column()]
        public string STEP_ID { get; set; }

        [Column()]
        public decimal WAIT_TAT { get; set; }

        [Column()]
        public decimal RUN_TAT { get; set; }

        [Column()]
        public decimal TOTAL_TAT { get; set; }

        public StepTAT ShallowCopy()
        {
			var x = (StepTAT) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="StepYield")]
    public partial class StepYield : EntityObject
    {
        [Column()]
        public string PRODUCT_ID { get; set; }

        [Column()]
        public string STEP_ID { get; set; }

        [Column()]
        public decimal STEP_YIELD { get; set; }

        public StepYield ShallowCopy()
        {
			var x = (StepYield) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="Demand")]
    public partial class Demand : EntityObject
    {
        [Column()]
        public string DEMAND_VER { get; set; }

        [Column()]
        public string DEMAND_ID { get; set; }

        [Column()]
        public string PRODUCT_ID { get; set; }

        [Column()]
        public string DUE_DATE { get; set; }

        [Column()]
        public uint DEMAND_QTY { get; set; }

        public Demand ShallowCopy()
        {
			var x = (Demand) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="Config")]
    public partial class Config : EntityObject
    {
        [Column()]
        public string GROUP { get; set; }

        [Column()]
        public string KEY { get; set; }

        [Column()]
        public string VALUE { get; set; }

        [Column()]
        public string DESCRIPTION { get; set; }

        public Config ShallowCopy()
        {
			var x = (Config) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="ExcutionOpertion")]
    public partial class ExcutionOpertion : EntityObject
    {
        [Column()]
        public string OPTION_ID { get; set; }

        [Column()]
        public string OPTION_VLAUE { get; set; }

        public ExcutionOpertion ShallowCopy()
        {
			var x = (ExcutionOpertion) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
    [Table(Name="PresetInfo")]
    public partial class PresetInfo : EntityObject
    {
        [Column()]
        public string SCENARIO_ID { get; set; }

        [Column()]
        public string PRESET_ID { get; set; }

        [Column()]
        public string FACTOR_ID { get; set; }

        [Column()]
        public string FACTOR_TYPE { get; set; }

        [Column()]
        public float FACTOR_WEIGHT { get; set; }

        [Column()]
        public int SEQUENCE { get; set; }

        [Column()]
        public string ORDER_TYPE { get; set; }

        [Column()]
        public string CRITERIA { get; set; }

        public PresetInfo ShallowCopy()
        {
			var x = (PresetInfo) this.MemberwiseClone();
			x.InitCopy();
            return x;
        }
    }
}
